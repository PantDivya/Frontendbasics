{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction LoginComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\", 27);\n    i0.ɵɵtext(2, \" *Email is required.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_17_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\", 27);\n    i0.ɵɵtext(2, \" *Email is invalid.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_17_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\", 27);\n    i0.ɵɵtext(2, \" *Email shoud have one or more subdomain\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, LoginComponent_div_17_div_1_Template, 3, 0, \"div\", 26);\n    i0.ɵɵtemplate(2, LoginComponent_div_17_div_2_Template, 3, 0, \"div\", 26);\n    i0.ɵɵtemplate(3, LoginComponent_div_17_div_3_Template, 3, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"email\"].errors[\"Required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"email\"].errors[\"email\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"email\"].errors[\"pattern\"]);\n  }\n}\nfunction LoginComponent_div_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\", 28);\n    i0.ɵɵtext(2, \"*password required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, LoginComponent_div_22_div_1_Template, 3, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f[\"password\"].errors[\"required\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class LoginComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.login = new FormGroup({\n      email: new FormControl(''),\n      password: new FormControl('')\n    });\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.login = this.formBuilder.group({\n      email: ['', Validators.required, Validators.email, Validators.pattern(/^[\\w-]+@([\\w-]+\\.)*[a-zA-Z]{2,7}$/)],\n      password: ['', Validators.required, Validators.minLength(8), Validators.pattern(/^(?=.*[A-Z])(?=.*[@$!%*?&])$/)]\n    });\n  }\n  get f() {\n    return this.login.controls;\n  }\n  OnSubmit() {\n    this.submitted = true;\n    if (this.login.invalid) {\n      return;\n    }\n  }\n  onReset() {\n    this.submitted = false;\n    this.login.reset();\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 35,\n    vars: 9,\n    consts: [[1, \"h-100\", \"gradient-form\", 2, \"background-color\", \"#eee\"], [1, \"container\", \"py-5\", \"h-100\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"h-100\"], [1, \"col-xl-10\"], [1, \"card\", \"rounded-3\", \"text-black\"], [1, \"row\", \"g-0\"], [1, \"col-lg-6\"], [1, \"card-body\", \"p-md-5\", \"mx-md-4\"], [1, \"text-center\"], [\"src\", \"https://cdn.pixabay.com/photo/2017/03/16/21/18/logo-2150297_640.png\", \"alt\", \"logo\", 2, \"width\", \"185px\"], [1, \"mt-1\", \"mb-5\", \"pb-1\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-outline\", \"mb-4\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Enter your email...\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter your password...\", 1, \"form-control\", 3, \"ngClass\"], [1, \"text-center\", \"pt-1\", \"mb-5\", \"pb-1\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"gradient-custom-2\", \"mb-3\"], [\"href\", \"#!\", 1, \"text-muted\"], [1, \"d-flex\", \"align-items-center\", \"justify-content-center\", \"pb-4\"], [1, \"mb-0\", \"me-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\"], [1, \"col-lg-6\", \"d-flex\", \"align-items-center\", \"gradient-custom-2\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"text-danger\"], [1, \"te\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"div\", 7)(8, \"div\", 8);\n        i0.ɵɵelement(9, \"img\", 9);\n        i0.ɵɵelementStart(10, \"h4\", 10);\n        i0.ɵɵtext(11, \"Welcome to Log In page\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"form\", 11);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_12_listener() {\n          return ctx.OnSubmit;\n        });\n        i0.ɵɵelementStart(13, \"div\", 12)(14, \"label\", 13);\n        i0.ɵɵtext(15, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 14);\n        i0.ɵɵtemplate(17, LoginComponent_div_17_Template, 4, 3, \"div\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 12)(19, \"label\", 16);\n        i0.ɵɵtext(20, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 17);\n        i0.ɵɵtemplate(22, LoginComponent_div_22_Template, 2, 1, \"div\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 18)(24, \"button\", 19);\n        i0.ɵɵtext(25, \"Log in\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"br\");\n        i0.ɵɵelementStart(27, \"a\", 20);\n        i0.ɵɵtext(28, \"Forgot password?\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"div\", 21)(30, \"p\", 22);\n        i0.ɵɵtext(31, \"Don't have an account?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"button\", 23);\n        i0.ɵɵtext(33, \"Create new\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(34, \"div\", 24);\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"formGroup\", ctx.login);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.submitted && ctx.f[\"email\"].errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"email\"].errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.submitted && ctx.f[\"password\"].errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"password\"].errors);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAAuCA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;ICkDrEC,2BAA2C;IACvCA,oCAAmB;IAAAA,iBAAQ;;;;;IAC/BA,2BAAwC;IACpCA,mCAAkB;IAAAA,iBAAQ;;;;;IAC9BA,2BAA0C;IACtCA,wDAAuC;IAAAA,iBAAQ;;;;;IANvDA,+BAAqE;IACjEA,uEACqC;IACrCA,uEACoC;IACpCA,uEACyD;IAC7DA,iBAAM;;;;IANIA,eAAmC;IAAnCA,2DAAmC;IAEnCA,eAAgC;IAAhCA,wDAAgC;IAEhCA,eAAkC;IAAlCA,0DAAkC;;;;;IAWxCA,2BAA8C;IAAkBA,kCAAkB;IAAAA,iBAAQ;;;;;IAD9FA,+BAAwE;IACpEA,uEAAgG;IACpGA,iBAAM;;;;IADIA,eAAsC;IAAtCA,8DAAsC;;;;;;;;AD1DxE,OAAM,MAAOC,cAAc;EAQzBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAN/B,UAAK,GAAc,IAAIL,SAAS,CAAC;MAC/BM,KAAK,EAAE,IAAIP,WAAW,CAAC,EAAE,CAAC;MAC1BQ,QAAQ,EAAE,IAAIR,WAAW,CAAC,EAAE;KAC7B,CAAC;IACF,cAAS,GAAY,KAAK;EAEqB;EAE/CS,QAAQ;IACN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MAClCJ,KAAK,EAAG,CAAC,EAAE,EAACL,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACK,KAAK,EAACL,UAAU,CAACW,OAAO,CAAC,mCAAmC,CAAC,CAAC;MAC1GL,QAAQ,EAAG,CAAC,EAAE,EAAEN,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACY,SAAS,CAAC,CAAC,CAAC,EAACZ,UAAU,CAACW,OAAO,CAAC,8BAA8B,CAAC;KAChH,CAAC;EAEJ;EAEA,IAAIE,CAAC;IACH,OAAO,IAAI,CAACL,KAAK,CAACM,QAAQ;EAC5B;EAEAC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAG,IAAI,CAACR,KAAK,CAACS,OAAO,EAAC;MACpB;;EAEJ;EAEAC,OAAO;IACL,IAAI,CAACF,SAAS,GAAG,KAAK;IACtB,IAAI,CAACR,KAAK,CAACW,KAAK,EAAE;EACpB;EAAC;qBAhCUjB,cAAc;EAAA;EAAA;UAAdA,cAAc;IAAAkB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCmB3BvB,kCAAqE;QAUjDA,yBACmC;QACnCA,+BAA2B;QAAAA,uCAAsB;QAAAA,iBAAK;QAGxDA,iCAAgD;QAAtBA;UAAA;QAAA,EAAqB;QAE7CA,gCAA+B;QACWA,sBAAK;QAAAA,iBAAQ;QACrDA,6BAE+D;QAE7DA,kEAOM;QACVA,iBAAM;QAENA,gCAA+B;QACcA,yBAAQ;QAAAA,iBAAQ;QAC3DA,6BAEkE;QAChEA,kEAEM;QACVA,iBAAM;QAENA,gCAAwC;QACyCA,uBAC3E;QAAAA,iBAAS;QAAAA,sBAAK;QAClBA,8BAAgC;QAAAA,iCAAgB;QAAAA,iBAAI;QAGtDA,gCAAmE;QAC5CA,uCAAsB;QAAAA,iBAAI;QAC/CA,mCAAqD;QAAAA,2BAAU;QAAAA,iBAAS;QAOhFA,2BAEM;QACRA,iBAAM;;;QA9CMA,gBAAmB;QAAnBA,qCAAmB;QAMnBA,eAA0D;QAA1DA,4FAA0D;QAE3BA,eAAoC;QAApCA,6DAAoC;QAcrEA,eAA+D;QAA/DA,+FAA+D;QAC9BA,eAAuC;QAAvCA,gEAAuC","names":["FormControl","FormGroup","Validators","i0","LoginComponent","constructor","formBuilder","email","password","ngOnInit","login","group","required","pattern","minLength","f","controls","OnSubmit","submitted","invalid","onReset","reset","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\GitRepo\\FrontendBasic\\frontend\\src\\app\\login\\login.component.ts","E:\\GitRepo\\FrontendBasic\\frontend\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  login: FormGroup = new FormGroup({\n    email: new FormControl(''),\n    password: new FormControl('')\n  });\n  submitted: boolean = false;\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.login = this.formBuilder.group({\n      email : ['',Validators.required, Validators.email,Validators.pattern(/^[\\w-]+@([\\w-]+\\.)*[a-zA-Z]{2,7}$/)],\n      password : ['', Validators.required, Validators.minLength(8),Validators.pattern(/^(?=.*[A-Z])(?=.*[@$!%*?&])$/)],\n    });\n\n  }\n\n  get f(): { [key: string]: AbstractControl } {\n    return this.login.controls;\n  }\n\n  OnSubmit() : void{\n    this.submitted = true;\n    if(this.login.invalid){\n      return;\n    }\n  }\n\n  onReset(): void {\n    this.submitted = false;\n    this.login.reset();\n  }\n}\n\n","<!-- <section class=\"h-100 gradient-form\" style=\"background-color: #eee\">\n    <div class=\"form-wrapper\">\n        <div class=\"section-title\">\n         <h3>Login Form</h3> <hr/>\n        </div>\n        <form >\n            <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input type=\"email\" formcontrolname=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter your email..\"/>\n                <small class=\"\">*Email is Required</small>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" formcontrolname=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Enter your password..\" />\n                \n            </div>\n                <small>Not Signed up? </small>\n                <a routerLink=\"/signup\">SignUp</a>\n            \n            <div class=\"form-group\">\n                <input type=\"button\" class=\"btn btn-outline-success\" value=\"LogIn\">\n            </div>\n        </form>\n    </div>\n    \n</section> -->\n\n<section class=\"h-100 gradient-form\" style=\"background-color: #eee;\">\n    <div class=\"container py-5 h-100\">\n      <div class=\"row d-flex justify-content-center align-items-center h-100\">\n        <div class=\"col-xl-10\">\n          <div class=\"card rounded-3 text-black\">\n            <div class=\"row g-0\">\n              <div class=\"col-lg-6\">\n                <div class=\"card-body p-md-5 mx-md-4\">\n  \n                  <div class=\"text-center\">\n                    <img src=\"https://cdn.pixabay.com/photo/2017/03/16/21/18/logo-2150297_640.png\"\n                      style=\"width: 185px;\" alt=\"logo\">\n                    <h4 class=\"mt-1 mb-5 pb-1\">Welcome to Log In page</h4>\n                  </div>\n  \n                  <form [formGroup]=\"login\" (ngSubmit)=\"OnSubmit\">\n  \n                    <div class=\"form-outline mb-4\">\n                        <label class=\"form-label\" for=\"email\">Email</label>\n                      <input type=\"email\" id=\"email\" class=\"form-control\" formControlName=\"email\"\n                        placeholder=\"Enter your email...\" \n                        [ngClass]=\"{'is-invalid': submitted && f['email'].errors}\" />\n                        <!-- Error messages -->\n                        <div class=\"invalid-feedback\" *ngIf=\"submitted && f['email'].errors\">\n                            <div *ngIf=\"f['email'].errors['Required']\"><small class=\"text-danger\">\n                                *Email is required.</small></div>\n                            <div *ngIf=\"f['email'].errors['email']\"><small class=\"text-danger\">\n                                *Email is invalid.</small></div>\n                            <div *ngIf=\"f['email'].errors['pattern']\"><small class=\"text-danger\">\n                                *Email shoud have one or more subdomain</small></div>\n                        </div>\n                    </div>\n  \n                    <div class=\"form-outline mb-4\">\n                        <label class=\"form-label\" for=\"password\">Password</label>\n                      <input type=\"password\" id=\"password\" class=\"form-control\" formControlName=\"password\"\n                      placeholder=\"Enter your password...\"\n                      [ngClass]=\"{'is-invalid' :  submitted && f['password'].errors}\" />\n                        <div class=\"invalid-feedback\" *ngIf=\"submitted && f['password'].errors\">\n                            <div *ngIf=\"f['password'].errors['required']\"><small class=\"te\">*password required</small></div>\n                        </div>\n                    </div>\n  \n                    <div class=\"text-center pt-1 mb-5 pb-1\">\n                      <button class=\"btn btn-primary btn-block gradient-custom-2 mb-3\" type=\"button\">Log\n                        in</button><br/>\n                      <a class=\"text-muted\" href=\"#!\">Forgot password?</a>\n                    </div>\n  \n                    <div class=\"d-flex align-items-center justify-content-center pb-4\">\n                      <p class=\"mb-0 me-2\">Don't have an account?</p>\n                      <button type=\"button\" class=\"btn btn-outline-danger\">Create new</button>\n                    </div>\n  \n                  </form>\n  \n                </div>\n              </div>\n              <div class=\"col-lg-6 d-flex align-items-center gradient-custom-2\">\n                \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}